This patch prevent CHIP from autobooting as soon as power
is applied over microusb. This is needed for usage with a
solar panel as solar panel has voltage transients which will
cause CHIP to boot and shutdown repeatedly, possibly damaging it.
With this patch, CHIP will need to be specifically powered on
using the power button. Alternatively, the PD2 pin can be held to ground
at boot to enable shutdowns.

diff --git a/board/sunxi/board.c b/board/sunxi/board.c
index b04c2f6..1990c8a 100644
--- a/board/sunxi/board.c
+++ b/board/sunxi/board.c
@@ -21,6 +21,7 @@
 #include <asm/arch/gpio.h>
 #include <asm/arch/mmc.h>
 #include <asm/arch/usb_phy.h>
+#include <asm/arch-sunxi/pmic_bus.h>
 #include <asm/gpio.h>
 #include <asm/io.h>
 #include <nand.h>
@@ -436,11 +437,64 @@ void sunxi_board_init(void)
 {
 	int power_failed = 0;
 	unsigned long ramsize;
+  int rc;
+  u8  val;
 
 #if defined CONFIG_AXP152_POWER || defined CONFIG_AXP209_POWER || \
 	defined CONFIG_AXP221_POWER || defined CONFIG_AXP818_POWER
 	power_failed = axp_init();
 
+//#ifdef CONFIG_AXP209_POWER
+  // power down immediately if powered on by pluging in to micro usb
+  int *sram_ver_reg = 0x01c00024;
+  printf("0x%08x\n", *sram_ver_reg);
+
+  if( (*sram_ver_reg) & 0x0100) {
+    // check if no-auto-boot jumper set on PD2
+    unsigned int pd2 = SUNXI_GPD(2);
+    // set as input
+    sunxi_gpio_set_cfgpin(pd2, SUNXI_GPIO_INPUT);
+    // enable pullup
+    sunxi_gpio_set_pull(pd2, SUNXI_GPIO_PULL_UP);
+    // read value
+    unsigned int v = gpio_get_value(pd2);
+    // disable pullup
+    sunxi_gpio_set_pull(pd2, 0);
+
+    if (v==0) {
+        printf("AUTOBOOT enabled: jumper on PD2\n");
+    } else {
+        printf("AUTOBOOT on power application disabled: no jumper on PD2\n");
+        rc = pmic_bus_read(AXP209_POWER_STATUS, &val);
+        if (rc) {
+           printf("ERROR cannot read from AXP209!\n");
+        } else {
+          if(val&0x1) {
+             rc=pmic_bus_read(AXP209_POWER_MODE, &val);
+             if ( val & 0x20 ) {
+               /* if there is a battery connected, shutdown */
+               printf("started by pluging in while battery connected"
+                      " -> powering down again\n");
+               rc=pmic_bus_read(AXP209_SHUTDOWN, &val);
+
+               if(rc) {
+                 printf("ERROR cannot read from AXP209!\n");
+               }
+
+               val |= 128;
+               rc = pmic_bus_write(AXP209_SHUTDOWN, val);
+               if(rc) {
+                 printf("ERROR cannot write to AXP209!\n");
+               }
+             }
+          }
+        }
+    }
+  } else {
+    printf("fel jumper set!\n");
+  }
+//#endif // CONFIG_AXP209_POWER
+
 #if defined CONFIG_AXP221_POWER || defined CONFIG_AXP818_POWER
 	power_failed |= axp_set_dcdc1(CONFIG_AXP_DCDC1_VOLT);
 #endif
diff --git a/include/axp209.h b/include/axp209.h
index c822dd8..1d26664 100644
--- a/include/axp209.h
+++ b/include/axp209.h
@@ -6,6 +6,7 @@
 
 enum axp209_reg {
 	AXP209_POWER_STATUS = 0x00,
+	AXP209_POWER_MODE = 0x01,
 	AXP209_CHIP_VERSION = 0x03,
 	AXP209_OUTPUT_CTRL = 0x12,
 	AXP209_DCDC2_VOLTAGE = 0x23,
