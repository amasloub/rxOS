#!/bin/sh
#
# Start a remote access session if configured
#
# This file is part of rxOS.
# rxOS is free software licensed under the
# GNU GPL version 3 or any later version.
#
# (c) 2016 Outernet Inc
# Some rights reserved.

[ -f /etc/conf.d/remote ] || exit 0
. /etc/conf.d/remote

LOCAL_PORT="22"
SSH_KEY="/etc/remote_key"
DAEMON="/usr/bin/ssh"
RESTART_DELAY="5"
REMOTE_USER="nologin"
REMOTE_LOGIN="${REMOTE_USER}@$REVSSH_HOST"
LOGFILE="/tmp/revssh-start.log"

getip() {
  ip addr show "$REVSSH_IFACE" | grep "inet " | awk '{print $2}' \
    | cut -d/ -f1
}

# This function will run the SSH rev tunnel in an infinite loop and keep
# starting it whenever it quits with a 5s delay between each start.
revtunnel() {
  while true; do
    ip=$(getip)
    while [ -z "$ip" ]; do
        sleep 2
        ip=$(getip)
    done
    $DAEMON -y -i "$SSH_KEY" -R "$REVSSH_PORT:$ip:$LOCAL_PORT" -N -T \
      "$REMOTE_LOGIN" -K 30 -I 150 >"$LOGFILE" 2>&1
    sleep $RESTART_DELAY
  done
}


start() {
  printf "Starting SSH: "
  revtunnel &
  echo "OK"
}

stop() {
  printf "Stopping SSH: "
  # There's no known PID, so we kill them by process list
  for proc in $(ps ax | grep $DAEMON | grep -v grep | awk '{print $1}'); do
    kill "$proc"
  done
  echo "OK"
}

status() {
  ps ax | grep $DAEMON | grep -q -v grep && echo "Running" || echo "Stopped"
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        sleep $RESTART_DELAY
        start
        ;;
esac

exit $?
